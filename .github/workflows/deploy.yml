# .github/workflows/deploy.yml
name: Deploy FitFlavourz to GitHub Pages
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Replace Firebase configuration placeholders
        run: |
          echo "=== Processing Firebase Configuration ==="
          
          # Check if environment variables are set
          if [ -z "$FIREBASE_API_KEY" ]; then
            echo "❌ FIREBASE_API_KEY environment variable is not set"
            exit 1
          fi
          
          if [ -z "$FIREBASE_AUTH_DOMAIN" ]; then
            echo "❌ FIREBASE_AUTH_DOMAIN environment variable is not set"
            exit 1
          fi
          
          if [ -z "$FIREBASE_DATABASE_URL" ]; then
            echo "❌ FIREBASE_DATABASE_URL environment variable is not set"
            exit 1
          fi
          
          if [ -z "$FIREBASE_PROJECT_ID" ]; then
            echo "❌ FIREBASE_PROJECT_ID environment variable is not set"
            exit 1
          fi
          
          echo "✅ All Firebase environment variables are set"
          
          # Process the HTML file
          if [ -f "Fit_Login.html" ]; then
            echo "=== Processing Fit_Login.html ==="
            
            # Use envsubst to replace placeholders
            # First, create a temporary file with the replacements
            export FIREBASE_API_KEY_PLACEHOLDER="$FIREBASE_API_KEY"
            export FIREBASE_AUTH_DOMAIN_PLACEHOLDER="$FIREBASE_AUTH_DOMAIN"
            export FIREBASE_DATABASE_URL_PLACEHOLDER="$FIREBASE_DATABASE_URL"
            export FIREBASE_PROJECT_ID_PLACEHOLDER="$FIREBASE_PROJECT_ID"
            
            # Replace using sed with environment variables
            sed -i "s|FIREBASE_API_KEY_PLACEHOLDER|${FIREBASE_API_KEY}|g" Fit_Login.html
            sed -i "s|FIREBASE_AUTH_DOMAIN_PLACEHOLDER|${FIREBASE_AUTH_DOMAIN}|g" Fit_Login.html
            sed -i "s|FIREBASE_DATABASE_URL_PLACEHOLDER|${FIREBASE_DATABASE_URL}|g" Fit_Login.html
            sed -i "s|FIREBASE_PROJECT_ID_PLACEHOLDER|${FIREBASE_PROJECT_ID}|g" Fit_Login.html
            
            # Verify replacements
            if grep -q "FIREBASE.*PLACEHOLDER" Fit_Login.html; then
              echo "❌ Some placeholders were not replaced:"
              grep -n "FIREBASE.*PLACEHOLDER" Fit_Login.html
              exit 1
            else
              echo "✅ All placeholders have been replaced successfully"
            fi
            
          else
            echo "❌ Fit_Login.html file not found!"
            ls -la
            exit 1
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
